{"ast":null,"code":"// import React, { useEffect, useReducer, useState } from 'react';\n// import { Link, useNavigate, useLocation } from 'react-router-dom';\n// import axios from 'axios';\n// import { toast } from 'react-toastify';\n// import { getError } from '../utils';\n// import { Helmet } from 'react-helmet-async';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n// import Rating from '../components/Rating';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// import Button from 'react-bootstrap/Button';\n// import Product from '../components/Product';\n// import LinkContainer from 'react-router-bootstrap/LinkContainer';\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case 'FETCH_REQUEST':\n//       return { ...state, loading: true };\n//     case 'FETCH_SUCCESS':\n//       return {\n//         ...state,\n//         products: action.payload.products,\n//         page: action.payload.page,\n//         pages: action.payload.pages,\n//         countProducts: action.payload.countProducts,\n//         loading: false,\n//       };\n//     case 'FETCH_FAIL':\n//       return { ...state, loading: false, error: action.payload };\n//     default:\n//       return state;\n//   }\n// };\n// const prices = [\n//   {\n//     name: '$1 to $50',\n//     value: '1-50',\n//   },\n//   {\n//     name: '$51 to $200',\n//     value: '51-200',\n//   },\n//   {\n//     name: '$201 to $1000',\n//     value: '201-1000',\n//   },\n// ];\n// export const ratings = [\n//   {\n//     name: '4stars & up',\n//     rating: 4,\n//   },\n//   {\n//     name: '3stars & up',\n//     rating: 3,\n//   },\n//   {\n//     name: '2stars & up',\n//     rating: 2,\n//   },\n//   {\n//     name: '1stars & up',\n//     rating: 1,\n//   },\n// ];\n// export default function SearchScreen() {\n//   const navigate = useNavigate();\n//   const { search } = useLocation();\n//   const sp = new URLSearchParams(search); // /search?category=Shirts\n//   const category = sp.get('category') || 'all';\n//   const query = sp.get('query') || 'all';\n//   const price = sp.get('price') || 'all';\n//   const rating = sp.get('rating') || 'all';\n//   const order = sp.get('order') || 'newest';\n//   const page = sp.get('page') || 1;\n//   const [{ loading, error, products, pages, countProducts }, dispatch] =\n//     useReducer(reducer, {\n//       loading: true,\n//       error: '',\n//     });\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const { data } = await axios.get(\n//           `/api/products/search?page=${page}&query=${query}&category=${category}&price=${price}&rating=${rating}&order=${order}`\n//         );\n//         dispatch({ type: 'FETCH_SUCCESS', payload: data });\n//       } catch (err) {\n//         dispatch({\n//           type: 'FETCH_FAIL',\n//           payload: getError(error),\n//         });\n//       }\n//     };\n//     fetchData();\n//   }, [category, error, order, page, price, query, rating]);\n//   const [categories, setCategories] = useState([]);\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const { data } = await axios.get(`/api/products/categories`);\n//         setCategories(data);\n//       } catch (err) {\n//         toast.error(getError(err));\n//       }\n//     };\n//     fetchCategories();\n//   }, [dispatch]);\n//   const getFilterUrl = (filter) => {\n//     const filterPage = filter.page || page;\n//     const filterCategory = filter.category || category;\n//     const filterQuery = filter.query || query;\n//     const filterRating = filter.rating || rating;\n//     const filterPrice = filter.price || price;\n//     const sortOrder = filter.order || order;\n//     return `/search?category=${filterCategory}&query=${filterQuery}&price=${filterPrice}&rating=${filterRating}&order=${sortOrder}&page=${filterPage}`;\n//   };\n//   return (\n//     <div>\n//       <Helmet>\n//         <title>Search Products</title>\n//       </Helmet>\n//       <Row>\n//         <Col md={3}>\n//           <h3>Department</h3>\n//           <div>\n//             <ul>\n//               <li>\n//                 <Link\n//                   className={'all' === category ? 'text-bold' : ''}\n//                   to={getFilterUrl({ category: 'all' })}\n//                 >\n//                   Any\n//                 </Link>\n//               </li>\n//               {categories.map((c) => (\n//                 <li key={c}>\n//                   <Link\n//                     className={c === category ? 'text-bold' : ''}\n//                     to={getFilterUrl({ category: c })}\n//                   >\n//                     {c}\n//                   </Link>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//           <div>\n//             <h3>Price</h3>\n//             <ul>\n//               <li>\n//                 <Link\n//                   className={'all' === price ? 'text-bold' : ''}\n//                   to={getFilterUrl({ price: 'all' })}\n//                 >\n//                   Any\n//                 </Link>\n//               </li>\n//               {prices.map((p) => (\n//                 <li key={p.value}>\n//                   <Link\n//                     to={getFilterUrl({ price: p.value })}\n//                     className={p.value === price ? 'text-bold' : ''}\n//                   >\n//                     {p.name}\n//                   </Link>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//           <div>\n//             <h3>Avg. Customer Review</h3>\n//             <ul>\n//               {ratings.map((r) => (\n//                 <li key={r.name}>\n//                   <Link\n//                     to={getFilterUrl({ rating: r.rating })}\n//                     className={`${r.rating}` === `${rating}` ? 'text-bold' : ''}\n//                   >\n//                     <Rating caption={' & up'} rating={r.rating}></Rating>\n//                   </Link>\n//                 </li>\n//               ))}\n//               <li>\n//                 <Link\n//                   to={getFilterUrl({ rating: 'all' })}\n//                   className={rating === 'all' ? 'text-bold' : ''}\n//                 >\n//                   <Rating caption={' & up'} rating={0}></Rating>\n//                 </Link>\n//               </li>\n//             </ul>\n//           </div>\n//         </Col>\n//         <Col md={9}>\n//           {loading ? (\n//             <LoadingBox></LoadingBox>\n//           ) : error ? (\n//             <MessageBox variant=\"danger\">{error}</MessageBox>\n//           ) : (\n//             <>\n//               <Row className=\"justify-content-between mb-3\">\n//                 <Col md={6}>\n//                   <div>\n//                     {countProducts === 0 ? 'No' : countProducts} Results\n//                     {query !== 'all' && ' : ' + query}\n//                     {category !== 'all' && ' : ' + category}\n//                     {price !== 'all' && ' : Price ' + price}\n//                     {rating !== 'all' && ' : Rating ' + rating + ' & up'}\n//                     {query !== 'all' ||\n//                     category !== 'all' ||\n//                     rating !== 'all' ||\n//                     price !== 'all' ? (\n//                       <Button\n//                         variant=\"light\"\n//                         onClick={() => navigate('/search')}\n//                       >\n//                         <i className=\"fas fa-times-circle\"></i>\n//                       </Button>\n//                     ) : null}\n//                   </div>\n//                 </Col>\n//                 <Col className=\"text-end\">\n//                   Sort by{' '}\n//                   <select\n//                     value={order}\n//                     onChange={(e) => {\n//                       navigate(getFilterUrl({ order: e.target.value }));\n//                     }}\n//                   >\n//                     <option value=\"newest\">Newest Arrivals</option>\n//                     <option value=\"lowest\">Price: Low to High</option>\n//                     <option value=\"highest\">Price: High to Low</option>\n//                     <option value=\"toprated\">Avg. Customer Reviews</option>\n//                   </select>\n//                 </Col>\n//               </Row>\n//               {products.length === 0 && (\n//                 <MessageBox>No Product Found</MessageBox>\n//               )}\n//               <Row>\n//                 {products.map((product) => (\n//                   <Col sm={6} lg={4} className=\"mb-3\" key={product._id}>\n//                     <Product product={product}></Product>\n//                   </Col>\n//                 ))}\n//               </Row>\n//               <div>\n//                 {[...Array(pages).keys()].map((x) => (\n//                   <LinkContainer\n//                     key={x + 1}\n//                     className=\"mx-1\"\n//                     to={getFilterUrl({ page: x + 1 })}\n//                   >\n//                     <Button\n//                       className={Number(page) === x + 1 ? 'text-bold' : ''}\n//                       variant=\"light\"\n//                     >\n//                       {x + 1}\n//                     </Button>\n//                   </LinkContainer>\n//                 ))}\n//               </div>\n//             </>\n//           )}\n//         </Col>\n//       </Row>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/shaileesavaliya/Downloads/mern-amazona-master/frontend/src/screens/SearchScreen.js"],"names":[],"mappingssourcesContent":["// import React, { useEffect, useReducer, useState } from 'react';\n// import { Link, useNavigate, useLocation } from 'react-router-dom';\n// import axios from 'axios';\n// import { toast } from 'react-toastify';\n// import { getError } from '../utils';\n// import { Helmet } from 'react-helmet-async';\n// import Row from 'react-bootstrap/Row';\n// import Col from 'react-bootstrap/Col';\n// import Rating from '../components/Rating';\n// import LoadingBox from '../components/LoadingBox';\n// import MessageBox from '../components/MessageBox';\n// import Button from 'react-bootstrap/Button';\n// import Product from '../components/Product';\n// import LinkContainer from 'react-router-bootstrap/LinkContainer';\n\n// const reducer = (state, action) => {\n//   switch (action.type) {\n//     case 'FETCH_REQUEST':\n//       return { ...state, loading: true };\n//     case 'FETCH_SUCCESS':\n//       return {\n//         ...state,\n//         products: action.payload.products,\n//         page: action.payload.page,\n//         pages: action.payload.pages,\n//         countProducts: action.payload.countProducts,\n//         loading: false,\n//       };\n//     case 'FETCH_FAIL':\n//       return { ...state, loading: false, error: action.payload };\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const prices = [\n//   {\n//     name: '$1 to $50',\n//     value: '1-50',\n//   },\n//   {\n//     name: '$51 to $200',\n//     value: '51-200',\n//   },\n//   {\n//     name: '$201 to $1000',\n//     value: '201-1000',\n//   },\n// ];\n\n// export const ratings = [\n//   {\n//     name: '4stars & up',\n//     rating: 4,\n//   },\n\n//   {\n//     name: '3stars & up',\n//     rating: 3,\n//   },\n\n//   {\n//     name: '2stars & up',\n//     rating: 2,\n//   },\n\n//   {\n//     name: '1stars & up',\n//     rating: 1,\n//   },\n// ];\n\n// export default function SearchScreen() {\n//   const navigate = useNavigate();\n//   const { search } = useLocation();\n//   const sp = new URLSearchParams(search); // /search?category=Shirts\n//   const category = sp.get('category') || 'all';\n//   const query = sp.get('query') || 'all';\n//   const price = sp.get('price') || 'all';\n//   const rating = sp.get('rating') || 'all';\n//   const order = sp.get('order') || 'newest';\n//   const page = sp.get('page') || 1;\n\n//   const [{ loading, error, products, pages, countProducts }, dispatch] =\n//     useReducer(reducer, {\n//       loading: true,\n//       error: '',\n//     });\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const { data } = await axios.get(\n//           `/api/products/search?page=${page}&query=${query}&category=${category}&price=${price}&rating=${rating}&order=${order}`\n//         );\n//         dispatch({ type: 'FETCH_SUCCESS', payload: data });\n//       } catch (err) {\n//         dispatch({\n//           type: 'FETCH_FAIL',\n//           payload: getError(error),\n//         });\n//       }\n//     };\n//     fetchData();\n//   }, [category, error, order, page, price, query, rating]);\n\n//   const [categories, setCategories] = useState([]);\n//   useEffect(() => {\n//     const fetchCategories = async () => {\n//       try {\n//         const { data } = await axios.get(`/api/products/categories`);\n//         setCategories(data);\n//       } catch (err) {\n//         toast.error(getError(err));\n//       }\n//     };\n//     fetchCategories();\n//   }, [dispatch]);\n\n//   const getFilterUrl = (filter) => {\n//     const filterPage = filter.page || page;\n//     const filterCategory = filter.category || category;\n//     const filterQuery = filter.query || query;\n//     const filterRating = filter.rating || rating;\n//     const filterPrice = filter.price || price;\n//     const sortOrder = filter.order || order;\n//     return `/search?category=${filterCategory}&query=${filterQuery}&price=${filterPrice}&rating=${filterRating}&order=${sortOrder}&page=${filterPage}`;\n//   };\n//   return (\n//     <div>\n//       <Helmet>\n//         <title>Search Products</title>\n//       </Helmet>\n//       <Row>\n//         <Col md={3}>\n//           <h3>Department</h3>\n//           <div>\n//             <ul>\n//               <li>\n//                 <Link\n//                   className={'all' === category ? 'text-bold' : ''}\n//                   to={getFilterUrl({ category: 'all' })}\n//                 >\n//                   Any\n//                 </Link>\n//               </li>\n//               {categories.map((c) => (\n//                 <li key={c}>\n//                   <Link\n//                     className={c === category ? 'text-bold' : ''}\n//                     to={getFilterUrl({ category: c })}\n//                   >\n//                     {c}\n//                   </Link>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//           <div>\n//             <h3>Price</h3>\n//             <ul>\n//               <li>\n//                 <Link\n//                   className={'all' === price ? 'text-bold' : ''}\n//                   to={getFilterUrl({ price: 'all' })}\n//                 >\n//                   Any\n//                 </Link>\n//               </li>\n//               {prices.map((p) => (\n//                 <li key={p.value}>\n//                   <Link\n//                     to={getFilterUrl({ price: p.value })}\n//                     className={p.value === price ? 'text-bold' : ''}\n//                   >\n//                     {p.name}\n//                   </Link>\n//                 </li>\n//               ))}\n//             </ul>\n//           </div>\n//           <div>\n//             <h3>Avg. Customer Review</h3>\n//             <ul>\n//               {ratings.map((r) => (\n//                 <li key={r.name}>\n//                   <Link\n//                     to={getFilterUrl({ rating: r.rating })}\n//                     className={`${r.rating}` === `${rating}` ? 'text-bold' : ''}\n//                   >\n//                     <Rating caption={' & up'} rating={r.rating}></Rating>\n//                   </Link>\n//                 </li>\n//               ))}\n//               <li>\n//                 <Link\n//                   to={getFilterUrl({ rating: 'all' })}\n//                   className={rating === 'all' ? 'text-bold' : ''}\n//                 >\n//                   <Rating caption={' & up'} rating={0}></Rating>\n//                 </Link>\n//               </li>\n//             </ul>\n//           </div>\n//         </Col>\n//         <Col md={9}>\n//           {loading ? (\n//             <LoadingBox></LoadingBox>\n//           ) : error ? (\n//             <MessageBox variant=\"danger\">{error}</MessageBox>\n//           ) : (\n//             <>\n//               <Row className=\"justify-content-between mb-3\">\n//                 <Col md={6}>\n//                   <div>\n//                     {countProducts === 0 ? 'No' : countProducts} Results\n//                     {query !== 'all' && ' : ' + query}\n//                     {category !== 'all' && ' : ' + category}\n//                     {price !== 'all' && ' : Price ' + price}\n//                     {rating !== 'all' && ' : Rating ' + rating + ' & up'}\n//                     {query !== 'all' ||\n//                     category !== 'all' ||\n//                     rating !== 'all' ||\n//                     price !== 'all' ? (\n//                       <Button\n//                         variant=\"light\"\n//                         onClick={() => navigate('/search')}\n//                       >\n//                         <i className=\"fas fa-times-circle\"></i>\n//                       </Button>\n//                     ) : null}\n//                   </div>\n//                 </Col>\n//                 <Col className=\"text-end\">\n//                   Sort by{' '}\n//                   <select\n//                     value={order}\n//                     onChange={(e) => {\n//                       navigate(getFilterUrl({ order: e.target.value }));\n//                     }}\n//                   >\n//                     <option value=\"newest\">Newest Arrivals</option>\n//                     <option value=\"lowest\">Price: Low to High</option>\n//                     <option value=\"highest\">Price: High to Low</option>\n//                     <option value=\"toprated\">Avg. Customer Reviews</option>\n//                   </select>\n//                 </Col>\n//               </Row>\n//               {products.length === 0 && (\n//                 <MessageBox>No Product Found</MessageBox>\n//               )}\n\n//               <Row>\n//                 {products.map((product) => (\n//                   <Col sm={6} lg={4} className=\"mb-3\" key={product._id}>\n//                     <Product product={product}></Product>\n//                   </Col>\n//                 ))}\n//               </Row>\n\n//               <div>\n//                 {[...Array(pages).keys()].map((x) => (\n//                   <LinkContainer\n//                     key={x + 1}\n//                     className=\"mx-1\"\n//                     to={getFilterUrl({ page: x + 1 })}\n//                   >\n//                     <Button\n//                       className={Number(page) === x + 1 ? 'text-bold' : ''}\n//                       variant=\"light\"\n//                     >\n//                       {x + 1}\n//                     </Button>\n//                   </LinkContainer>\n//                 ))}\n//               </div>\n//             </>\n//           )}\n//         </Col>\n//       </Row>\n//     </div>\n//   );\n// }\n"]},"metadata":{},"sourceType":"module"}